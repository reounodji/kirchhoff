@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Localization
@inject IViewLocalizer Localizer
@using System.Threading


@model RegistrationViewModel
@{
    var errorMessage = ViewBag.ErrorMessage == null ? "" : ViewBag.ErrorMessage;
    Dictionary<string, string> countryCodes = new Dictionary<string, string>();
    countryCodes.Add("de", "0049");
    countryCodes.Add("en", "0044");
    countryCodes.Add("fr", "0033");
    countryCodes.Add("es", "0034");
    countryCodes.Add("it", "0039");
    countryCodes.Add("pt", "00351");
    countryCodes.Add("pl", "0048");
    countryCodes.Add("hr", "00385");
    countryCodes.Add("tr", "0090");
    countryCodes.Add("cs-CZ", "00420");
    countryCodes.Add("sk", "00421");
    countryCodes.Add("hu", "0036");
    countryCodes.Add("ro", "0040");
    countryCodes.Add("ru", "007");
    countryCodes.Add("lt", "00370");
    countryCodes.Add("uk-UA", "00380");
  //  string curCulture = Localizer["Language"].Value;//Context.Request.Headers["accept-language"];

}



@{
    string[] supportedCultures = { "de", "en-GB", "fr", "es", "it", "pt", "pl", "hr", "tr", "cs-CZ", "sk", "hu", "ro", "ru", "lt", "uk-UA" }; //"bg",
    var curCulture = Thread.CurrentThread.CurrentCulture.Name;
    string cultures = "";
    for (int i = 0; i < supportedCultures.Length - 1; i++)
    {
        cultures += supportedCultures[i] + ",";
    }
    cultures += supportedCultures[supportedCultures.Length - 1];

    var timePerLanguage = Model == null ? 30 : Model?.TimePerLanguage;
}
<input type="hidden" id="cultures" value="@cultures" />
<input type="hidden" id="curCulture" value="@curCulture" />

<input type="hidden" id="NextLanguageTimer" value="@timePerLanguage" />

@*<div class="row">
        <h1>@Localizer["WelcomeMessage"]</h1>
        <br />
        <p>@Localizer["SelectLanguage"]</p>
        <br />
    </div>*@

<div class="row">
    <div class="col-lg-3">
        <ul class="flagTable">
            @for (int i = 0; i < supportedCultures.Length; i++)
            {
                var png = supportedCultures[i] + ".png";
                var classes = "flag";
                if (curCulture == supportedCultures[i])
                {
                    classes += " selected";
                }
                <li class="flagListItem">
                    <a asp-action="SetLanguage" asp-route-culture="@supportedCultures[i]" id="Get @supportedCultures[i]"><img src="~/images/Flags/@png" class="@classes" /></a>
                </li>
            }
        </ul>

    </div>
    <div class="col-lg-9">











        <form asp-controller="Registration" asp-action="Index" id="RegistrationForm" onsubmit="disableButton('SendButton')" method="post">

            <div asp-validation-summary="All" style="color:red"></div>

            <input type="hidden" asp-for="SelectedLanguage" value="curCulture" />



            <div class="row">



                <div class="col-md-2">
                    <label asp-for="LicensePlate" class="control-label">Kennzeichen*</label>
                </div>
                <div class="col-md-4">
                    <input type="text" asp-for="LicensePlate" class="form-control inputElement" id="LicensePlateInput" placeholder="ABC-DE-123" autocomplete="off" />
                </div>



            </div>

            <div class="row">
                <div class="col-md-2">

                    <label class="control-label" id="CompanyNameLabel">Name*</label>

                </div>
                <div class="col-md-4">
                    <input type="text" asp-for="CompanyName" class="form-control inputElement" placeholder="Vorname Nachname" id="CompanyNameInput" oninput="companyNameKeyUp()" autocomplete="off" />
                </div>

            </div>


            <div class="row">
                <div class="col-md-2">

                    <label class="control-label" id="CompanyNameLabel">Spedition*</label>

                </div>
                <div class="col-md-4">
                    <input type="text" asp-for="CompanyName" class="form-control inputElement" placeholder="Spedition" id="Spedition" oninput="companyNameKeyUp()" autocomplete="off" />
                </div>

            </div>



            <div class="row">
                <div class="col-md-2">

                    <label class="control-label" id="CompanyNameLabel">Kunde*</label>

                </div>
                <div class="col-md-4">
                    <input type="text" asp-for="CompanyName" class="form-control inputElement" placeholder="Kunde" id="Kunde" oninput="companyNameKeyUp()" autocomplete="off" />
                </div>

            </div>


            <div class="row">
                <div class="col-md-2">

                    <label class="control-label" id="CompanyNameLabel">Mobilnummer*</label>

                </div>
                <div class="col-md-4">
                    <input type="text" asp-for="CompanyName" class="form-control inputElement" placeholder="+4917..." id="Mobilnummer" oninput="companyNameKeyUp()" autocomplete="off" />
                </div>

            </div>


            <div class="row">



                <div class="col-md-2">
                    <label asp-for="LicensePlate" class="control-label">Ziele*</label>
                </div>
                <div class="col-md-4">
                    <div class="row">

                        <div class="col-md-12">
                            <label class="unselectable" style="width:100%; height:100%;">

                                <label style="font-size:18px">Beladen</label>
                                <input asp-for="IsSmallVehicle" type="checkbox" id="smallVehicleCheckBox" onclick="setSmallVehicle(this.checked);" class="checkbox" />
                            </label>
                        </div>

                        <div class="col-md-12">
                            <label class="unselectable" style="width:100%; height:100%;">

                                <label style="font-size:18px">Anlieferung</label>
                                <input type="checkbox" id="bigVehicleCheckBox" onclick="setSmallVehicle(!this.checked);" class="checkbox" />
                            </label>
                        </div>

                        <div class="col-md-12">
                            <label class="unselectable" style="width:100%; height:100%;">

                                <label style="font-size:18px">Leergut</label>
                                <input type="checkbox" id="bigVehicleCheckBox" onclick="setSmallVehicle(!this.checked);" class="checkbox" />
                            </label>
                        </div>

                    </div>


                </div>

                <div class="col-md-6">

                </div>

            </div>







            <hr />
            <div class="row">
                <p>* Pflichteingabe</p>
            </div>

            <input type="checkbox" asp-for="Edit" value="false" hidden />
            <input asp-for="TimeTillReset" type="number" id="IdleTimer" value="@Model.TimeTillReset" hidden />

            <div class="row">
                <a asp-action="Index" class="btn btn-danger">Abbrechen</a>
                <button type="submit" id="SendButton" class="btn btn-success" style="float:right">Anmelden</button>
            </div>
        </form>
































    </div>


</div>

@*<div class="row">
        <p>@Localizer["Instructions"]</p>
        <br />
    </div>

    <div class="row">
        <form asp-action="Index" method="get">
            <input type="hidden" name="page" value="2" />
            <button id="ContinueButton" class="btn btn-success" style="float:right;">@Localizer["ContinueButton"]</button>
        </form>
    </div>*@

<script>

        //window.onload = startTimer();

        //function startTimer() {
        //    var timer = document.getElementById("NextLanguageTimer").value;
        //    timer *= 1000;
        //    setInterval(function () {
        //        var curCulture = document.getElementById("curCulture").value;
        //        var all = document.getElementById("cultures").value.split(",");
        //        var idx = all.indexOf(curCulture);
        //        idx = (idx + 1) % all.length;
        //        var a = document.getElementById("Get " + all[idx]);
        //        a.click();
        //    }, timer);
        //}


            //var btn = document.getElementById("ContinueButton");
            //var timer = setInterval(function () {
            //    var description = btn.innerText.split("(")[0];
            //    var valueStr = btn.innerText.split("(")[1];
            //    var value = parseInt(valueStr.charAt(0));
            //    value--;

            //    if (value <= 0) {
            //        btn.disabled = false;
            //        clearInterval(timer);
            //        btn.innerText = description;
            //        btn.classList = "btn btn-success";
            //    }
            //    else {
            //        btn.innerText = description + "(" + value + ")";
            //    }
            //}, 1000);
</script>



<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CancelButton" xml:space="preserve">
    <value>Zrušit</value>
  </data>
  <data name="ContinueButton" xml:space="preserve">
    <value>Potvrdit</value>
  </data>
  <data name="Instructions" xml:space="preserve">
    <value>V celom areali plati zakon (StVO )cestnej premavky a je povinne nosit bezpecnostnu vestu a bezpecnostnu /e obuv/Boty.&lt;br /&gt;
		&lt;br /&gt;
		Je prikazane dodrziavat tempo chodze a davat pozor na nakladnu dopravu a vozickarov.&lt;br /&gt;
		&lt;br /&gt;
		Je vasa povinnost dodrzat pravne poziadavky na zaistenie nakladu podla ( § 22 pravidla cestnej premavky)&lt;br /&gt;
		&lt;br /&gt;
		Pokyny zamestnancov nasej spolocnosti su v kazdom pripade nutne dodrziavat.&lt;br /&gt;</value>
    <comment>3</comment>
  </data>
  <data name="SafetyInformation" xml:space="preserve">
    <value>&lt;li&gt;V areálu závodu platí pravidla silničního provozu a rovněž povinnost nosit reflexní vestu a bezpečnostní obuv!&lt;/li&gt;
&lt;li&gt;Je třeba pohybovat se rychlostí chůze a dávat pozor na pohyb osob a jiných vozidel!&lt;/li&gt;
&lt;li&gt;Je nutné dodržovat zákonné požadavky týkající se zabezpečení nákladu (§ 22 StVO, § 30 a 31 StVZO; § 22 a 23 StVO; § 412 HGB).&lt;/li&gt;
&lt;li&gt;Při vjezdu do areálu závodu musí být všechny nakládací otvory udržovány uzavřené nebo odpovídajícím způsobem zajištěné!&lt;/li&gt;
&lt;li&gt;V celém areálu závodu platí jednosměrný provoz!&lt;/li&gt;
&lt;li&gt;Je zakázáno zdržovat se v areálu závodu o samotě a rovněž platí zákaz vstupu osobám mladším 16 let.&lt;/li&gt;
&lt;li&gt;Spolujezdci musejí počkat ve voze, pokud se nepodílejí na procesu nakládky a vykládky!&lt;/li&gt;
&lt;li&gt;Fotografování v areálu závodu je zakázáno!&lt;/li&gt;
&lt;li&gt;Informace, které uvidíte a uslyšíte, podléhají zachování mlčenlivosti!&lt;/li&gt;
&lt;li&gt;Areál závodu je monitorován kamerovým systémem!&lt;/li&gt;
&lt;li&gt;Parkování v areálu závodu je povoleno pouze pro účely nakládky a vykládky!&lt;/li&gt;
&lt;li&gt;Ochranka závodu provádí kontrolu vozidel!&lt;/li&gt;
&lt;li&gt;Za všech okolností je nutné dodržovat pokyny pracovníků logistiky a ochranky závodu!&lt;/li&gt;</value>
    <comment>2</comment>
  </data>
  <data name="SafetyInformationHeader" xml:space="preserve">
    <value>Dbejte přitom následujících důležitých pokynů:</value>
    <comment>1</comment>
  </data>
</root>